// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TutoWebAspL3.Services;

#nullable disable

namespace TutoWebAspL3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240920151102_firstmigration")]
    partial class firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TutoWebAspL3.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("catDesignation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("TutoWebAspL3.Models.Commune", b =>
                {
                    b.Property<int>("CommuneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommuneId"));

                    b.Property<string>("comNom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommuneId");

                    b.ToTable("Commune");
                });

            modelBuilder.Entity("TutoWebAspL3.Models.Etudiant", b =>
                {
                    b.Property<int>("EtudiantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EtudiantId"));

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<int>("CommuneId")
                        .HasColumnType("int");

                    b.Property<string>("cheminImage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("etuCotisation")
                        .HasColumnType("int");

                    b.Property<DateTime>("etuDateNaiss")
                        .HasColumnType("datetime2");

                    b.Property<string>("etuEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("etuNom")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("etuPrenom")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("etuSexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EtudiantId");

                    b.HasIndex("CategorieId");

                    b.HasIndex("CommuneId");

                    b.ToTable("Etudiant");
                });

            modelBuilder.Entity("TutoWebAspL3.Models.Quittance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("quitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("quitLibelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quitMontantEmis")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("EtudiantId");

                    b.ToTable("Quittance");
                });

            modelBuilder.Entity("TutoWebAspL3.Models.Etudiant", b =>
                {
                    b.HasOne("TutoWebAspL3.Models.Categorie", "unCategorie")
                        .WithMany("lesEtudiants")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TutoWebAspL3.Models.Commune", "unCommune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("unCategorie");

                    b.Navigation("unCommune");
                });

            modelBuilder.Entity("TutoWebAspL3.Models.Quittance", b =>
                {
                    b.HasOne("TutoWebAspL3.Models.Etudiant", "unEtudiant")
                        .WithMany("listQuittances")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("unEtudiant");
                });

            modelBuilder.Entity("TutoWebAspL3.Models.Categorie", b =>
                {
                    b.Navigation("lesEtudiants");
                });

            modelBuilder.Entity("TutoWebAspL3.Models.Etudiant", b =>
                {
                    b.Navigation("listQuittances");
                });
#pragma warning restore 612, 618
        }
    }
}
